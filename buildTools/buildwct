#!/bin/sh

DIST_DIR="../wctank/static/dist/"
ASSETS_DIR="../wctank/static/assets/"

echo "* * * Cleaning previous build..."
rm -r $DIST_DIR

echo "* * * Making build directory..."
mkdir $DIST_DIR

echo "* * * Optimizing js..."
java -classpath ./js.jar:./compiler.jar \
    org.mozilla.javascript.tools.shell.Main r.js -o build.js

echo "* * * Move main.js into dist..."
cp ../appbuildingspace/js/main.js ${DIST_DIR}main.js

echo "* * * Cleaning up..."
rm -r ../appbuildingspace

echo "* * * Compiling less"
lessc ../wctank/static/less/styles.less ${DIST_DIR}styles.css

echo "* * * Minifying CSS"
cleancss -o ${DIST_DIR}styles-min.css ${DIST_DIR}styles.css

echo "* * * Cleaning up..."
rm ${DIST_DIR}styles.css

compress()
{
    NAME=$(basename $1 .wav)
    FILE_PATH=${ASSETS_DIR}${NAME}
    if [ -e "${FILE_PATH}.ogg" ] && [ -e "${FILE_PATH}.mp3" ];
    then
        echo "* * * $1 has already been compressed. Skipping..."
    else
        echo "* * * Compressing ${1}..."
        ./audio/compress $1 $ASSETS_DIR
    fi
}

echo "* * * Beginning audio compression..."
RAW=./audio/raw/*
for f in $RAW
do
    compress $f
done

echo "* * * Beginning audio sprite parsing..."
PARSE=./audio/to-parse/*
for f in $PARSE
do
    NAME=$(basename $f .wav)
    
    echo "* * * Cleaning previous ${NAME}.TextGridIntervals"
    rm "${ASSETS_DIR}${NAME}.TextGridIntervals"
    
    echo "* * * Parsing ${f}..."
    praat ./audio/parseAudioSprite.praat $NAME wav to-parse/ ../../wctank/static/assets/

    compress $f
done

echo "* * * Done."
